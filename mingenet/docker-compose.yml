version: '3'

networks:
    mingenet:

services:

    # nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "82:80"
        volumes:
            - ./app:/var/www/project
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php74-service
            - mysql8-service
            - redis702-service
        networks:
            - mingenet

    # php
    php74-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php74-container
        #ports:
            #- "9000:9000"
        volumes:
            - ./app:/var/www/project
        networks:
            - mingenet

    # mysql
    mysql8-service:
        image: mysql:8
        container_name: mysql8-container
        ports:
            - "3307:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        networks:
            - mingenet

    # redis
    redis702-service:
        image: redis:7.0.2-alpine
        container_name: redis702-container
        restart: always
        ports:
            - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass ${DB_PASSWORD}
        volumes: 
            - cache:/data
        networks:
            - mingenet

volumes:
    cache:
        driver: local
